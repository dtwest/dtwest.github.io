{"version":3,"sources":["components/visualisers/About.tsx","components/visualisers/algorithms/bubbleSort.ts","components/visualisers/algorithms/insertionSort.ts","components/visualisers/algorithms/selectionSort.ts","components/visualisers/algorithms/quickSort.ts","components/visualisers/Sorting.tsx","components/pages/Home.tsx","components/nav/SideDrawer.tsx","components/nav/Navbar.tsx","components/nav/ScrollToTop.tsx","routes.ts","App.tsx","theme.ts","index.tsx","components/visualisers/helpers/index.ts","components/visualisers/helpers/sleep.ts"],"names":["About","props","Fragment","Typography","variant","title","List","algorithms","map","algorithm","ListItem","Link","href","link","ListItemText","primary","timeComplexity","spaceComplexity","bubbleSort","state","setState","bars","a","data","slice","i","length","j","style","backgroundColor","orange","red","temp","sleep","comparisonSleep","then","green","insertionSort","key","selectionSort","minIndex","compareAnimation","partition","array","low","high","middle","Math","floor","pivot","prevState","quickSort","console","log","randomIntegers","amount","Array","fill","random","about","Sorting","useState","dataSetSize","sorting","randomise","sort","func","document","getElementsByClassName","Container","Box","my","Button","onClick","color","disabled","Slider","defaultValue","aria-labelledby","step","valueLabelDisplay","max","min","onChange","_","boxShadow","css","height","maxWidth","e","Tooltip","className","width","marginLeft","display","paddingLeft","Home","SideDrawer","right","toggleDrawer","event","type","IconButton","edge","aria-label","Menu","fontSize","Drawer","anchor","open","onClose","role","onKeyDown","component","to","button","links","ElevationScroll","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","children","elevation","NavBar","AppBar","Toolbar","LinkedIn","GitHub","Telegram","Email","id","styles","makeStyles","theme","createStyles","root","position","bottom","spacing","ScrollToTop","Zoom","in","target","ownerDocument","querySelector","top","scrollIntoView","behavior","block","routes","App","Navbar","exact","path","page","Fab","size","createMuiTheme","palette","main","deepPurple","secondary","indigo","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById","ms","Promise","resolve","setTimeout"],"mappings":"sUAyCeA,EAhCD,SAACC,GAAD,OACV,eAAC,IAAMC,SAAP,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BH,EAAMI,QAChC,cAACF,EAAA,EAAD,iEAGA,cAACA,EAAA,EAAD,gJAGA,uBACA,cAACA,EAAA,EAAD,yHAGA,uBACA,cAACA,EAAA,EAAD,mFAGA,cAACA,EAAA,EAAD,kFAGA,cAACG,EAAA,EAAD,UACKL,EAAMM,WAAWC,KAAI,SAAAC,GAAS,OAC3B,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,KAAMH,EAAUI,KAAtB,SACI,cAACC,EAAA,EAAD,CAAcC,QAAO,UAAKN,EAAUJ,MAAf,mBAA+BI,EAAUO,eAAzC,wBAAuEP,EAAUQ,gBAAjF,qB,yDC7BhCC,EAAU,uCAAG,WAAOC,EAAcC,EAAoBC,GAAzC,qBAAAC,EAAA,sDAChBC,EAAOJ,EAAMI,KAAKC,QAEfC,EAAI,EAHS,YAGNA,EAAIF,EAAKG,QAHH,iBAITC,EAAIF,EAJK,YAIFE,EAAIJ,EAAKG,QAJP,wBAKdL,EAAKI,GAAGG,MAAMC,gBAAkBC,IAAO,KACvCT,EAAKM,GAAGC,MAAMC,gBAAkBE,IAAI,KAChCR,EAAKE,GAAKF,EAAKI,KACTK,EAAOT,EAAKE,GAClBF,EAAKE,GAAKF,EAAKI,GACfJ,EAAKI,GAAKK,GAVA,UAYRC,gBAAMd,EAAMe,iBAAiBC,MAAK,WACpCf,GAAS,SAACD,GACN,OAAO,2BAAIA,GAAX,IAAkBI,eAdZ,QAiBdF,EAAKI,GAAGG,MAAMC,gBAAkBO,IAAM,KACtCf,EAAKM,GAAGC,MAAMC,gBAAkBO,IAAM,KAlBxB,QAIeT,IAJf,uBAGWF,IAHX,2DAAH,0DCAVY,EAAa,uCAAG,WAAOlB,EAAcC,EAAoBC,GAAzC,qBAAAC,EAAA,sDACnBC,EAAOJ,EAAMI,KAAKC,QAEfC,EAAI,EAHY,YAGTA,EAAIF,EAAKG,QAHA,iBAIjBC,EAAIF,EAAE,EACNa,EAAMf,EAAKE,GALM,YAOdE,GAAK,GAAKJ,EAAKI,GAAKW,GAPN,wBAQjBjB,EAAKI,GAAGG,MAAMC,gBAAkBC,IAAO,KACvCT,EAAKM,GAAGC,MAAMC,gBAAkBE,IAAI,KACpCR,EAAKI,EAAI,GAAKJ,EAAKI,GACnBA,GAAK,EAXY,UAYXM,gBAAMd,EAAMe,iBAAiBC,MAAK,WACpCf,GAAS,SAACD,GACN,OAAO,2BAAIA,GAAX,IAAkBI,eAdT,QAiBjBF,EAAKI,GAAGG,MAAMC,gBAAkBO,IAAM,KACtCf,EAAKM,EAAI,GAAGC,MAAMC,gBAAkBO,IAAM,KAlBzB,uBAoBrBb,EAAKI,EAAI,GAAKW,EApBO,QAGQb,IAHR,2DAAH,0DCAbc,EAAa,uCAAG,WAAOpB,EAAcC,EAAoBC,GAAzC,uBAAAC,EAAA,sDACnBC,EAAOJ,EAAMI,KAAKC,QAEfC,EAAI,EAHY,YAGTA,EAAIF,EAAKG,QAHA,iBAIjBc,EAAWf,EAENE,EAAIF,EAAI,EANI,YAMDE,EAAIJ,EAAKG,QANR,wBAOjBL,EAAKI,GAAGG,MAAMC,gBAAkBC,IAAO,KACvCT,EAAKM,GAAGC,MAAMC,gBAAkBE,IAAI,KAChCR,EAAKI,GAAKJ,EAAKiB,KACfA,EAAWb,GAVE,UAYXM,gBAAMd,EAAMe,iBAZD,QAajBb,EAAKI,GAAGG,MAAMC,gBAAkBO,IAAM,KACtCf,EAAKM,GAAGC,MAAMC,gBAAkBO,IAAM,KAdrB,QAMgBT,IANhB,uBAiBjBa,IAAaf,IACPO,EAAOT,EAAKE,GAClBF,EAAKE,GAAKF,EAAKiB,GACfjB,EAAKiB,GAAYR,GAGrBZ,GAAS,SAACD,GACN,OAAO,2BAAIA,GAAX,IAAkBI,YAxBD,QAGQE,IAHR,2DAAH,0DCDpBgB,EAAgB,uCAAG,WAAOpB,EAAwCF,EAAcM,EAAWE,GAAxE,SAAAL,EAAA,6DACrBD,EAAKI,GAAGG,MAAMC,gBAAkBC,IAAO,KACvCT,EAAKM,GAAGC,MAAMC,gBAAkBE,IAAI,KAFf,SAGfE,gBAAMd,EAAMe,iBAHG,OAIrBb,EAAKI,GAAGG,MAAMC,gBAAkBO,IAAM,KACtCf,EAAKM,GAAGC,MAAMC,gBAAkBO,IAAM,KALjB,2CAAH,4DAShBM,EAAS,uCAAG,WAAOC,EAAiBC,EAAaC,EAAc1B,EAAcC,EAAoBC,GAArF,uBAAAC,EAAA,sDACRwB,EAASC,KAAKC,OAAOH,EAAOD,GAAO,GACnCK,EAAQN,EAAMG,GAChBrB,EAAImB,EAAM,EACVjB,EAAIkB,EAAO,EAJD,uBAQNpB,IARM,SASAgB,EAAiBpB,EAAMF,EAAOM,EAAGqB,GATjC,UAUDH,EAAMlB,GAAKwB,EAVV,8BAaNtB,IAbM,UAcAc,EAAiBpB,EAAMF,EAAOQ,EAAGmB,GAdjC,WAeDH,EAAMhB,GAAKsB,EAfV,6BAiBNxB,GAAKE,GAjBC,0CAkBCA,GAlBD,yBAqBJc,EAAiBpB,EAAMF,EAAOM,EAAGE,GArB7B,QAuBJK,EAAOW,EAAMlB,GACnBkB,EAAMlB,GAAKkB,EAAMhB,GACjBgB,EAAMhB,GAAKK,EAEXZ,GAAS,SAAC8B,GACN,OAAO,2BAAIA,GAAX,IAAsB3B,KAAMoB,OA5BtB,2DAAH,gEAiCFQ,EAAS,uCAAG,WAAOhC,EAAcC,EAAoBC,GAAzC,iCAAAC,EAAA,yDAAiFsB,EAAjF,+BAA+F,EAAGC,EAAlG,+BAAiH1B,EAAMI,KAAKG,OAAS,EAC1JiB,GAD6JA,EAAxI,yBACGxB,EAAMI,KAAKC,QACnC4B,QAAQC,IAAR,UAAeT,EAAf,YAAsBC,EAAtB,YAA8BF,MAC1BC,EAAMC,GAHW,iCAIGH,EAAUC,EAAOC,EAAKC,EAAM1B,EAAOC,EAAUC,GAJhD,cAIX4B,EAJW,iBAKXE,EAAUhC,EAAOC,EAAUC,EAAMuB,EAAKK,EAAON,GALlC,yBAMXQ,EAAUhC,EAAOC,EAAUC,EAAM4B,EAAQ,EAAGJ,EAAMF,GANvC,iCASdA,GATc,4CAAH,0DC7BhBW,EAAiB,SAACC,GAGpB,OAAOC,MAAMD,GAAQE,KAAK,GAAGjD,KAFhB,kBAAOuC,KAAKC,MAAMD,KAAKW,SAAWH,GAAU,MAKvDI,EAAQ3D,EAAM,CAChBK,MAAO,+BACPE,WAAY,CJG0B,CACtCF,MAAO,cACPW,eAAgB,SAChBC,gBAAiB,OACjBJ,KAAM,6CCHmC,CACzCR,MAAO,iBACPW,eAAgB,SAChBC,gBAAiB,OACjBJ,KAAM,gDCCmC,CACzCR,MAAO,iBACPW,eAAgB,SAChBC,gBAAiB,OACjBJ,KAAM,gDCoB+B,CACrCR,MAAO,sCACPW,eAAgB,aAChBC,gBAAiB,WACjBJ,KAAM,qECuEK+C,EApGC,WAAO,IAAD,EACQC,mBAAS,CAC/BC,YAAa,GACbvC,KAAM+B,EAAe,IACrBpB,gBAAiB,EACjB6B,SAAS,EACTJ,UANc,mBACXxC,EADW,KACJC,EADI,KAmBZ4C,EAAY,WACd5C,GAAS,SAAC8B,GAAD,mBAAC,eACHA,GADE,IAEL3B,KAAM+B,EAAeJ,EAAUY,mBAIjCG,EAAO,SAACC,GAAD,OAAsG,WAE/G,IAAM7C,EAAQ8C,SAASC,uBAAuB,OAE9ChD,EAAS,2BAAID,GAAL,IAAY4C,SAAS,KAE7BG,EAAK/C,EAAOC,EAAUC,GAAMc,MAAK,WAC7Bf,GAAS,SAAC8B,GACN,OAAO,2BAAIA,GAAX,IAAsBa,SAAS,YAK3C,OACI,eAACM,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACC,EAAA,EAAD,CAAQC,QAAST,EAAWU,MAAM,UAAUtE,QAAQ,YAAYuE,SAAUxD,EAAM4C,QAAhF,uBAGA,cAACS,EAAA,EAAD,CAAQC,QAASR,EAAK/C,GAAayD,SAAUxD,EAAM4C,QAAnD,yBAGA,cAACS,EAAA,EAAD,CAAQC,QAASR,EAAK5B,GAAgBsC,SAAUxD,EAAM4C,QAAtD,4BAGA,cAACS,EAAA,EAAD,CAAQC,QAASR,EAAK1B,GAAgBoC,SAAUxD,EAAM4C,QAAtD,4BAGA,cAACS,EAAA,EAAD,CAAQC,QAASR,EAAKd,GAAYwB,SAAUxD,EAAM4C,QAAlD,wBAMA,cAACa,EAAA,EAAD,CACIC,aAAc,GACdC,kBAAgB,iBAChBC,KAAM,EACNC,kBAAkB,OAClBC,IAAK,IACLC,IAAK,GACLC,SA1DK,SAACC,EAAQtB,GAC1B1C,EAAS,2BACFD,GADC,IAEJe,gBAAiB,IAAO4B,EACxBA,YAAaA,KAGjBE,KAoDYW,SAAUxD,EAAM4C,aAGxB,cAACO,EAAA,EAAD,CAAKe,UAAW,EAAGC,IAAK,CACpBC,OAAQ,IACRC,SAAU,QAFd,SAKQrE,EAAMI,KAAKf,KAAI,SAACiF,EAAGhE,GAAJ,OACX,cAACiE,EAAA,EAAD,CAASrF,MAAOoF,EAAhB,SACI,qBACIE,UAAU,MAEV/D,MAAO,CACHC,gBAAiBO,IAAM,KACvBmD,OAAO,GAAD,OAAM,IAAMpE,EAAMI,KAAKG,OAAU+D,EAAjC,KACNG,MAAM,QAAD,OAAU,IAAMzE,EAAMI,KAAKG,OAA3B,YACLmE,WAAY,MACZC,QAAS,iBANRrE,UAazB,cAAC6C,EAAA,EAAD,CAAKC,GAAI,EAAGwB,YAAa,EAAGV,UAAW,EAAvC,SACKlE,EAAMwC,YClHRqC,EARF,WACL,OACI,cAAC3B,EAAA,EAAD,UACI,cAAC,EAAD,O,mGCyDD4B,EA1DI,SAAChG,GAA6B,IAAD,EAClB4D,mBAAS,CAAEqC,OAAO,IADA,mBACrC/E,EADqC,KAC9BC,EAD8B,KAGtC+E,EAAe,SAACD,GAAD,OAAoB,SAACE,IAErB,YAAfA,EAAMC,MACS,QAAdD,EAAM9D,KAA+B,UAAd8D,EAAM9D,MAKhClB,EAAS,CAAE8E,YA2Bf,OACI,eAAC,IAAMhG,SAAP,WACI,cAACoG,EAAA,EAAD,CACIC,KAAK,QACLC,aAAW,OACX/B,QAAS0B,GAAa,GAH1B,SAKI,cAACM,EAAA,EAAD,CAAMC,SAAS,QAAQ9E,MAAO,CAAE8C,MAAO,aAE3C,cAACiC,EAAA,EAAD,CACIC,OAAO,QACPC,KAAM1F,EAAM+E,MACZY,QAASX,GAAa,GAH1B,SAhCJ,qBACAR,UAAU,aACVoB,KAAK,eACLtC,QAAS0B,GAAa,GACtBa,UAAWb,GAAa,GAJxB,SAMA,eAAC7F,EAAA,EAAD,CAAM2G,UAAU,MAAhB,UACI,cAAC,IAAD,CAAMtB,UAAU,UAAU/D,MAAO,CAAC8C,MAAO,SAAUwC,GAAG,IAAtD,SACE,cAACxG,EAAA,EAAD,CAAUyG,QAAM,EAAhB,SACE,cAACrG,EAAA,EAAD,CAAcC,QAAQ,aAG3Bd,EAAMmH,MAAM5G,KAAI,gBAAGH,EAAH,EAAGA,MAAO6G,EAAV,EAAUA,GAAV,OACf,cAAC,IAAD,CAAMvB,UAAU,UAAU/D,MAAO,CAAC8C,MAAO,SAAUwC,GAAIA,EAAvD,SACG,cAACxG,EAAA,EAAD,CAAUyG,QAAM,EAAhB,SACE,cAACrG,EAAA,EAAD,CAAcC,QAASV,sBCtBlCgH,GAAkB,SAACpH,GACvB,IAAMqH,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,IAGb,OAAOC,IAAMC,aAAa1H,EAAM2H,SAAU,CACxCC,UAAWP,EAAU,EAAI,KAgDdQ,GA5CA,SAAC7H,GACd,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,GAAD,UACE,cAAC6H,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASf,UAAU,MAAMtB,UAAU,SAAnC,SACE,eAACtB,EAAA,EAAD,CAAWmB,SAAS,KAAKG,UAAU,SAAS/D,MAAO,CAACkE,QAAS,QAA7D,UACA,cAACQ,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,OAApC,SACE,cAAC,IAAD,CAAMb,UAAU,UAAUuB,GAAG,IAA7B,SACI,cAAC,IAAD,CAAMR,SAAS,cAGrB,gCACE,cAACJ,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,WAApC,SACE,mBAAGb,UAAU,UAAU/E,KAAK,wCAA5B,SACE,cAACqH,EAAA,EAAD,CAAUvB,SAAS,cAGvB,cAACJ,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,SAApC,SACE,mBAAGb,UAAU,UAAU/E,KAAK,4BAA5B,SACI,cAACsH,EAAA,EAAD,CAAQxB,SAAS,cAGvB,cAACJ,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,WAApC,SACI,mBAAGb,UAAU,UAAU/E,KAAK,sBAA5B,SACE,cAACuH,EAAA,EAAD,CAAUzB,SAAS,cAGzB,cAACJ,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,QAApC,SACI,mBAAGb,UAAU,UAAU/E,KAAK,iCAA5B,SACE,cAACwH,EAAA,EAAD,CAAO1B,SAAS,iBAIxB,cAAC,EAAD,CAAYU,MAAOnH,EAAMmH,iBAK/B,cAACY,EAAA,EAAD,CAASK,GAAG,gB,8BCvDZC,GAASC,cAAW,SAACC,GAAD,OACxBC,aAAa,CACXC,KAAM,CACFC,SAAU,QACVC,OAAQJ,EAAMK,QAAQ,GACtB3C,MAAOsC,EAAMK,QAAQ,SA8BdC,GAzBK,SAAC7I,GACnB,IAAMqH,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,MAab,OACE,cAACsB,GAAA,EAAD,CAAMC,GAAI1B,EAAV,SACE,qBAAK7C,QAZW,SAAC2B,GACnB,IAAMQ,GAAWR,EAAM6C,OAA0BC,eAAiB/E,UAAUgF,cAC1ElJ,EAAMmJ,IAAMnJ,EAAMmJ,IAAM,KAGtBxC,GACFA,EAAOyC,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAMxBxC,KAAK,eAAepB,UAAW2C,KAASI,KAAnE,SACGzI,EAAM2H,c,8BC9BA4B,GAFS,GC+BTC,I,OAzBH,WACV,OACE,gCACE,cAACC,GAAD,CAAQtC,MAAOoC,KACf,cAACnF,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsF,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEHJ,GAAOhJ,KAAI,cAAEH,MAAF,IAAS6G,EAAT,EAASA,GAAI2C,EAAb,EAAaA,KAAb,OACV,cAAC,IAAD,CAAOD,KAAM1C,EAAb,SACG2C,cAKT,cAAC,GAAD,CAAaT,IAAI,WAAjB,SACE,cAACU,GAAA,EAAD,CAAKpF,MAAM,YAAYqF,KAAK,QAAQvD,aAAW,qBAA/C,SACE,cAAC,KAAD,a,4BChBKgC,GAXDwB,aAAe,CACzBC,QAAS,CACLlJ,QAAS,CACLmJ,KAAMC,KAAW,MAErBC,UAAW,CACPF,KAAMG,KAAO,SCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,CAAejC,MAAOA,GAAtB,UACE,cAACkC,EAAA,EAAD,IACA,cAAC,GAAD,WAINvG,SAASwG,eAAe,U,gCChB1B,2D,gCCAA,kCAAO,IAAM1I,EAAQ,SAAC2I,GAClB,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,Q","file":"static/js/main.689ebd80.chunk.js","sourcesContent":["import { Link, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {Algorithm} from './helpers';\r\n\r\ninterface Props {\r\n    title: string;\r\n    algorithms: Algorithm[];\r\n}\r\n\r\nconst About = (props: Props) => (\r\n    <React.Fragment>\r\n        <Typography variant=\"h3\">{props.title}</Typography>\r\n        <Typography>\r\n            Welcome to my sorting visualiser, unique i know...\r\n        </Typography>\r\n        <Typography>\r\n            As the sorting algorithm works its way through the array, the elements that are being compared will flash red before swaps occur.\r\n        </Typography>\r\n        <br/>\r\n        <Typography>\r\n            The slider controls how big the data set is, as well as the amount of time to sleep between state changes.\r\n        </Typography>\r\n        <br/>\r\n        <Typography>\r\n            The smaller the set, the longer the sleep time. 200 / data.length ms\r\n        </Typography>\r\n        <Typography>\r\n            Orange === i, Red === j where there are two pointers, else just red\r\n        </Typography>\r\n        <List>\r\n            {props.algorithms.map(algorithm => (\r\n                <ListItem>\r\n                    <Link href={algorithm.link}>\r\n                        <ListItemText primary={`${algorithm.title}, time \"${algorithm.timeComplexity}\" and space \"${algorithm.spaceComplexity}\"!`}/>\r\n                    </Link>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default About","import { State, SetState, sleep, Algorithm } from \"../helpers\";\r\nimport { green,red, orange } from '@material-ui/core/colors';\r\n\r\n\r\nexport const bubbleSort = async (state: State, setState: SetState, bars: HTMLCollectionOf<HTMLDivElement>) => {\r\n    const data = state.data.slice();\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        for (let j = i; j < data.length; j++) {\r\n            bars[i].style.backgroundColor = orange[400];\r\n            bars[j].style.backgroundColor = red[400];\r\n            if (data[i] > data[j]) {\r\n                const temp = data[i]\r\n                data[i] = data[j]\r\n                data[j] = temp\r\n            }\r\n            await sleep(state.comparisonSleep).then(() => {\r\n                setState((state) => {\r\n                    return {...state, data}\r\n                })\r\n            });\r\n            bars[i].style.backgroundColor = green[400];\r\n            bars[j].style.backgroundColor = green[400];\r\n        }\r\n    }\r\n}\r\n\r\nexport const bubbleSortAbout: Algorithm = {\r\n    title: \"Bubble Sort\",\r\n    timeComplexity: \"O(n^2)\",\r\n    spaceComplexity: \"O(1)\",\r\n    link: \"https://en.wikipedia.org/wiki/Bubble_sort\"\r\n}","import { State, SetState, sleep, Algorithm } from \"../helpers\";\r\nimport { green,red, orange } from '@material-ui/core/colors';\r\n\r\n\r\nexport const insertionSort = async (state: State, setState: SetState, bars: HTMLCollectionOf<HTMLDivElement>) => {\r\n    const data = state.data.slice();\r\n    \r\n    for (let i = 1; i < data.length; i++) {\r\n        let j = i-1;\r\n        let key = data[i];\r\n\r\n        while (j >= 0 && data[j] > key) {\r\n            bars[i].style.backgroundColor = orange[400];\r\n            bars[j].style.backgroundColor = red[400];\r\n            data[j + 1] = data[j]\r\n            j -= 1\r\n            await sleep(state.comparisonSleep).then(() => {\r\n                setState((state) => {\r\n                    return {...state, data}\r\n                })\r\n            });\r\n            bars[i].style.backgroundColor = green[400];\r\n            bars[j + 1].style.backgroundColor = green[400];\r\n        }\r\n        data[j + 1] = key\r\n    }\r\n}\r\n\r\nexport const insertionSortAbout: Algorithm = {\r\n    title: \"Insertion Sort\",\r\n    timeComplexity: \"O(n^2)\",\r\n    spaceComplexity: \"O(1)\",\r\n    link: \"https://en.wikipedia.org/wiki/Insertion_sort\"\r\n}","import { State, SetState, sleep, Algorithm } from \"../helpers\";\r\nimport { green,red, orange } from '@material-ui/core/colors';\r\n\r\n\r\nexport const selectionSort = async (state: State, setState: SetState, bars: HTMLCollectionOf<HTMLDivElement>) => {\r\n    const data = state.data.slice();\r\n    \r\n    for (let i = 0; i < data.length; i++) {\r\n        let minIndex = i;\r\n\r\n        for (let j = i + 1; j < data.length; j++) {\r\n            bars[i].style.backgroundColor = orange[400];\r\n            bars[j].style.backgroundColor = red[400];\r\n            if (data[j] < data[minIndex]) {\r\n                minIndex = j\r\n            }\r\n            await sleep(state.comparisonSleep);\r\n            bars[i].style.backgroundColor = green[400];\r\n            bars[j].style.backgroundColor = green[400];\r\n        }\r\n\r\n        if (minIndex !== i) {\r\n            const temp = data[i]\r\n            data[i] = data[minIndex]\r\n            data[minIndex] = temp\r\n        }\r\n        \r\n        setState((state) => {\r\n            return {...state, data}\r\n        })\r\n    }\r\n}\r\n\r\nexport const selectionSortAbout: Algorithm = {\r\n    title: \"Selection Sort\",\r\n    timeComplexity: \"O(n^2)\",\r\n    spaceComplexity: \"O(1)\",\r\n    link: \"https://en.wikipedia.org/wiki/Selection_sort\"\r\n}","import { State, SetState, sleep, Algorithm } from \"../helpers\";\r\nimport { green,red, orange } from '@material-ui/core/colors';\r\n\r\nconst compareAnimation = async (bars: HTMLCollectionOf<HTMLDivElement>, state: State, i: number, j: number) => {\r\n    bars[i].style.backgroundColor = orange[400];\r\n    bars[j].style.backgroundColor = red[400];\r\n    await sleep(state.comparisonSleep)\r\n    bars[i].style.backgroundColor = green[400];\r\n    bars[j].style.backgroundColor = green[400];\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\r\nconst partition = async (array: number[], low: number, high: number, state: State, setState: SetState, bars: HTMLCollectionOf<HTMLDivElement>) => {\r\n    const middle = Math.floor((high + low) / 2)\r\n    const pivot = array[middle];\r\n    let i = low - 1;\r\n    let j = high + 1\r\n    \r\n    while (true) {\r\n        do {\r\n            i++\r\n            await compareAnimation(bars, state, i, middle)\r\n        } while (array[i] < pivot)\r\n\r\n        do {\r\n            j--\r\n            await compareAnimation(bars, state, j, middle)\r\n        } while (array[j] > pivot)\r\n\r\n        if (i >= j) {\r\n            return j\r\n        }\r\n\r\n        await compareAnimation(bars, state, i, j)\r\n\r\n        const temp = array[i]\r\n        array[i] = array[j]\r\n        array[j] = temp\r\n        \r\n        setState((prevState) => {\r\n            return {...prevState, data: array}\r\n        });\r\n    }\r\n}\r\n\r\nexport const quickSort = async (state: State, setState: SetState, bars: HTMLCollectionOf<HTMLDivElement>, low: number = 0, high: number = state.data.length - 1, array?: number[]) => {\r\n    array = array ? array : state.data.slice()\r\n    console.log(`${low} ${high} ${array}`)\r\n    if (low < high) {\r\n        const pivot = await partition(array, low, high, state, setState, bars) as number\r\n        await quickSort(state, setState, bars, low, pivot, array)\r\n        await quickSort(state, setState, bars, pivot + 1, high, array)\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport const quickSortAbout: Algorithm = {\r\n    title: \"Quick Sort (Hoare Partition Scheme)\",\r\n    timeComplexity: \"O(n log n)\",\r\n    spaceComplexity: \"O(log n)\",\r\n    link: \"https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\"\r\n}","import { Box, Button, Container, Tooltip, Slider, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport About from \"./About\";\r\nimport {\r\n    bubbleSort,\r\n    bubbleSortAbout,\r\n    insertionSort,\r\n    insertionSortAbout,\r\n    selectionSort,\r\n    selectionSortAbout,\r\n    quickSort,\r\n    quickSortAbout\r\n} from './algorithms';\r\nimport { SetState, State } from \"./helpers\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst randomIntegers = (amount: number): number[] => {\r\n    const rand = ()  => Math.floor(Math.random() * amount) + 1\r\n    \r\n    return Array(amount).fill(0).map(rand);\r\n}\r\n\r\nconst about = About({\r\n    title: \"Sorting Algorithm Visualiser\",\r\n    algorithms: [\r\n        bubbleSortAbout,\r\n        insertionSortAbout,\r\n        selectionSortAbout,\r\n        quickSortAbout\r\n    ]\r\n})\r\n\r\nconst Sorting = () => {\r\n    const [state, setState] = useState({\r\n        dataSetSize: 50,\r\n        data: randomIntegers(50),\r\n        comparisonSleep: 2,\r\n        sorting: false,\r\n        about\r\n    })\r\n\r\n    const handleSlider = (_: any, dataSetSize: number | number[]) => {\r\n        setState({\r\n            ...state,\r\n            comparisonSleep: 200 / (dataSetSize as number),\r\n            dataSetSize: dataSetSize as number\r\n        });\r\n\r\n        randomise()\r\n    }\r\n\r\n    const randomise = () => {\r\n        setState((prevState) =>({\r\n            ...prevState,\r\n            data: randomIntegers(prevState.dataSetSize)\r\n        }));\r\n    }\r\n\r\n    const sort = (func: (state: State, setState: SetState, bars: HTMLCollectionOf<HTMLDivElement>) => Promise<any>) => () => {\r\n        // update ref to bars\r\n        const bars =  document.getElementsByClassName('bar') as HTMLCollectionOf<HTMLDivElement>;\r\n            \r\n        setState({...state, sorting: true})\r\n\r\n        func(state, setState, bars).then(() => {\r\n            setState((prevState) => {\r\n                return {...prevState, sorting: false}\r\n            })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Box my={1}>\r\n                <Button onClick={randomise} color=\"primary\" variant=\"contained\" disabled={state.sorting}>\r\n                    Randomise\r\n                </Button>\r\n                <Button onClick={sort(bubbleSort)} disabled={state.sorting}>\r\n                    Bubble Sort\r\n                </Button>\r\n                <Button onClick={sort(insertionSort)} disabled={state.sorting}>\r\n                    Insertion Sort\r\n                </Button>\r\n                <Button onClick={sort(selectionSort)} disabled={state.sorting}>\r\n                    Selection Sort\r\n                </Button>\r\n                <Button onClick={sort(quickSort)} disabled={state.sorting}>\r\n                    Quick Sort\r\n                </Button>\r\n                {/* <Button disabled={state.sorting}>\r\n                    Merge Sort\r\n                </Button> */}\r\n                <Slider\r\n                    defaultValue={50}\r\n                    aria-labelledby=\"dataset-slider\"\r\n                    step={1}\r\n                    valueLabelDisplay=\"auto\"\r\n                    max={200}\r\n                    min={10}\r\n                    onChange={handleSlider}\r\n                    disabled={state.sorting}\r\n                />\r\n            </Box>\r\n            <Box boxShadow={2} css={{\r\n                height: 500,\r\n                maxWidth: '100%'\r\n            }}>\r\n                {\r\n                    state.data.map((e, i)  => (\r\n                        <Tooltip title={e}>\r\n                            <div\r\n                                className=\"bar\"\r\n                                key={i}\r\n                                style={{\r\n                                    backgroundColor: green[400],\r\n                                    height: `${(100 / state.data.length) * e}%`,\r\n                                    width: `calc(${100 / state.data.length}% - 1px)`,\r\n                                    marginLeft: '1px',\r\n                                    display: 'inline-block',\r\n                                }}\r\n                            />\r\n                        </Tooltip>\r\n                    ))\r\n                }\r\n            </Box>\r\n            <Box my={2} paddingLeft={5} boxShadow={2}>\r\n                {state.about}\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Sorting","import { Container } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Sorting from '../visualisers/Sorting';\r\n\r\nconst Home = () => {\r\n        return (\r\n            <Container>\r\n                <Sorting />\r\n            </Container>\r\n        )\r\n}\r\n\r\nexport default Home","import { Drawer, IconButton, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route } from '../../routes';\r\n\r\nconst SideDrawer = (props: {links: Route[]}) => {\r\n    const [state, setState] = useState({ right: false });\r\n\r\n    const toggleDrawer = (right: boolean) => (event: any) => {\r\n        if (\r\n          event.type === \"keydown\" &&\r\n          (event.key === \"Tab\" || event.key === \"Shift\")\r\n        ) {\r\n          return;\r\n        }\r\n    \r\n        setState({ right });\r\n    };\r\n\r\n    const sideDrawerList = () => (\r\n        <div\r\n        className=\"drawerList\"\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer(false)}\r\n        onKeyDown={toggleDrawer(false)}\r\n      >\r\n        <List component=\"nav\">\r\n            <Link className=\"navLink\" style={{color: \"black\"}} to=\"/\" >\r\n              <ListItem button>\r\n                <ListItemText primary=\"Home\"/>\r\n              </ListItem>\r\n            </Link>\r\n          {props.links.map(({ title, to }) => (\r\n            <Link className=\"navLink\" style={{color: \"black\"}} to={to}>\r\n               <ListItem button>\r\n                 <ListItemText primary={title}/>\r\n               </ListItem>\r\n             </Link>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton \r\n                edge=\"start\"\r\n                aria-label=\"menu\"\r\n                onClick={toggleDrawer(true)}\r\n            >\r\n                <Menu fontSize=\"large\" style={{ color: 'white'}} />\r\n            </IconButton>\r\n            <Drawer\r\n                anchor=\"right\"\r\n                open={state.right}\r\n                onClose={toggleDrawer(false)}\r\n            >\r\n                {sideDrawerList()}\r\n            </Drawer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SideDrawer","import { Container, IconButton } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { Email, GitHub, Home, LinkedIn, Telegram } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route } from '../../routes';\r\nimport SideDrawer from './SideDrawer';\r\n\r\ninterface Props {\r\n  children: React.ReactElement<any>;\r\n}\r\n\r\nconst ElevationScroll = (props: Props) => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(props.children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst NavBar = (props: {links: Route[]}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <ElevationScroll>\r\n        <AppBar>\r\n          <Toolbar component=\"nav\" className=\"navbar\">\r\n            <Container maxWidth='md' className=\"navbar\" style={{display: 'flex'}}>\r\n            <IconButton edge=\"start\" aria-label=\"home\">\r\n              <Link className=\"navLink\" to=\"/\">\r\n                  <Home fontSize=\"large\"/>\r\n              </Link>\r\n            </IconButton>\r\n            <div>\r\n              <IconButton edge=\"start\" aria-label=\"linkedin\">\r\n                <a className=\"navLink\" href=\"https://au.linkedin.com/in/dylantwest\">\r\n                  <LinkedIn fontSize=\"large\"/>\r\n                </a>\r\n              </IconButton>\r\n              <IconButton edge=\"start\" aria-label=\"Github\">\r\n                <a className=\"navLink\" href=\"https://github.com/dtwest\">\r\n                    <GitHub fontSize=\"large\"/>\r\n                </a>\r\n              </IconButton>\r\n              <IconButton edge=\"start\" aria-label=\"Telegram\">\r\n                  <a className=\"navLink\" href=\"https://t.me/dtwest\">\r\n                    <Telegram fontSize=\"large\"/>\r\n                  </a>\r\n              </IconButton>\r\n              <IconButton edge=\"start\" aria-label=\"Email\">\r\n                  <a className=\"navLink\" href=\"mailto:d.thomas.west@gmail.com\">\r\n                    <Email fontSize=\"large\"/>\r\n                  </a>\r\n              </IconButton>\r\n            </div>\r\n            <SideDrawer links={props.links} />\r\n          </Container>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <Toolbar id=\"toolbar\"/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NavBar","import { createStyles, makeStyles, Theme, Zoom } from '@material-ui/core';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n  top?: string;\r\n  children: React.ReactElement<any>;\r\n}\r\n\r\nconst styles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n  }),\r\n)\r\n\r\nconst ScrollToTop = (props: Props) => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 100\r\n  });\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\r\n      props.top ? props.top : '#',\r\n    );\r\n  \r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={styles().root}>\r\n        {props.children}\r\n      </div>\r\n    </Zoom>\r\n  )\r\n}\r\n\r\nexport default ScrollToTop","export interface Route {\r\n    title: string;\r\n    to: string;\r\n    page: () => JSX.Element\r\n}\r\n\r\nconst routes: Route[] = [ ]\r\n\r\nexport default routes\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport Home from './components/pages/Home';\r\nimport Navbar  from './components/nav/Navbar';\r\nimport Container from '@material-ui/core/Container';\r\nimport React from 'react';\r\nimport ScrollToTop from './components/nav/ScrollToTop';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport routes from './routes';\r\nimport './app.css';\r\n\r\n\r\nconst App = () =>  {\r\n  return (\r\n    <div>\r\n      <Navbar links={routes}/>\r\n      <Container>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n              <Home/>\r\n          </Route>\r\n          {routes.map(({title, to, page}) => (\r\n            <Route path={to}>\r\n              {page()}\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n      </Container>\r\n      <ScrollToTop top=\"#toolbar\">\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollToTop>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { deepPurple, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: deepPurple[400]\r\n        },\r\n        secondary: {\r\n            main: indigo[400]\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;","import { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export * from './sleep';\r\nexport * from './types';","export const sleep = (ms: number) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms))\r\n}"],"sourceRoot":""}